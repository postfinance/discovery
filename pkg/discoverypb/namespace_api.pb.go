// Code generated by protoc-gen-go. DO NOT EDIT.
// source: namespace_api.proto

package discoveryv1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RegisterNamespaceRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Export               int32    `protobuf:"varint,2,opt,name=export,proto3" json:"export,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterNamespaceRequest) Reset()         { *m = RegisterNamespaceRequest{} }
func (m *RegisterNamespaceRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterNamespaceRequest) ProtoMessage()    {}
func (*RegisterNamespaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b31ce92b46e1ec9, []int{0}
}

func (m *RegisterNamespaceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterNamespaceRequest.Unmarshal(m, b)
}
func (m *RegisterNamespaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterNamespaceRequest.Marshal(b, m, deterministic)
}
func (m *RegisterNamespaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterNamespaceRequest.Merge(m, src)
}
func (m *RegisterNamespaceRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterNamespaceRequest.Size(m)
}
func (m *RegisterNamespaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterNamespaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterNamespaceRequest proto.InternalMessageInfo

func (m *RegisterNamespaceRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RegisterNamespaceRequest) GetExport() int32 {
	if m != nil {
		return m.Export
	}
	return 0
}

type RegisterNamespaceResponse struct {
	Namespace            *Namespace `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RegisterNamespaceResponse) Reset()         { *m = RegisterNamespaceResponse{} }
func (m *RegisterNamespaceResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterNamespaceResponse) ProtoMessage()    {}
func (*RegisterNamespaceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b31ce92b46e1ec9, []int{1}
}

func (m *RegisterNamespaceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterNamespaceResponse.Unmarshal(m, b)
}
func (m *RegisterNamespaceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterNamespaceResponse.Marshal(b, m, deterministic)
}
func (m *RegisterNamespaceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterNamespaceResponse.Merge(m, src)
}
func (m *RegisterNamespaceResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterNamespaceResponse.Size(m)
}
func (m *RegisterNamespaceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterNamespaceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterNamespaceResponse proto.InternalMessageInfo

func (m *RegisterNamespaceResponse) GetNamespace() *Namespace {
	if m != nil {
		return m.Namespace
	}
	return nil
}

type UnregisterNamespaceRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnregisterNamespaceRequest) Reset()         { *m = UnregisterNamespaceRequest{} }
func (m *UnregisterNamespaceRequest) String() string { return proto.CompactTextString(m) }
func (*UnregisterNamespaceRequest) ProtoMessage()    {}
func (*UnregisterNamespaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b31ce92b46e1ec9, []int{2}
}

func (m *UnregisterNamespaceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnregisterNamespaceRequest.Unmarshal(m, b)
}
func (m *UnregisterNamespaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnregisterNamespaceRequest.Marshal(b, m, deterministic)
}
func (m *UnregisterNamespaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnregisterNamespaceRequest.Merge(m, src)
}
func (m *UnregisterNamespaceRequest) XXX_Size() int {
	return xxx_messageInfo_UnregisterNamespaceRequest.Size(m)
}
func (m *UnregisterNamespaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnregisterNamespaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnregisterNamespaceRequest proto.InternalMessageInfo

func (m *UnregisterNamespaceRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type UnregisterNamespaceResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnregisterNamespaceResponse) Reset()         { *m = UnregisterNamespaceResponse{} }
func (m *UnregisterNamespaceResponse) String() string { return proto.CompactTextString(m) }
func (*UnregisterNamespaceResponse) ProtoMessage()    {}
func (*UnregisterNamespaceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b31ce92b46e1ec9, []int{3}
}

func (m *UnregisterNamespaceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnregisterNamespaceResponse.Unmarshal(m, b)
}
func (m *UnregisterNamespaceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnregisterNamespaceResponse.Marshal(b, m, deterministic)
}
func (m *UnregisterNamespaceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnregisterNamespaceResponse.Merge(m, src)
}
func (m *UnregisterNamespaceResponse) XXX_Size() int {
	return xxx_messageInfo_UnregisterNamespaceResponse.Size(m)
}
func (m *UnregisterNamespaceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UnregisterNamespaceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UnregisterNamespaceResponse proto.InternalMessageInfo

type ListNamespaceRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListNamespaceRequest) Reset()         { *m = ListNamespaceRequest{} }
func (m *ListNamespaceRequest) String() string { return proto.CompactTextString(m) }
func (*ListNamespaceRequest) ProtoMessage()    {}
func (*ListNamespaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b31ce92b46e1ec9, []int{4}
}

func (m *ListNamespaceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNamespaceRequest.Unmarshal(m, b)
}
func (m *ListNamespaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNamespaceRequest.Marshal(b, m, deterministic)
}
func (m *ListNamespaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNamespaceRequest.Merge(m, src)
}
func (m *ListNamespaceRequest) XXX_Size() int {
	return xxx_messageInfo_ListNamespaceRequest.Size(m)
}
func (m *ListNamespaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNamespaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListNamespaceRequest proto.InternalMessageInfo

type ListNamespaceResponse struct {
	Namespaces           []*Namespace `protobuf:"bytes,1,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ListNamespaceResponse) Reset()         { *m = ListNamespaceResponse{} }
func (m *ListNamespaceResponse) String() string { return proto.CompactTextString(m) }
func (*ListNamespaceResponse) ProtoMessage()    {}
func (*ListNamespaceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b31ce92b46e1ec9, []int{5}
}

func (m *ListNamespaceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNamespaceResponse.Unmarshal(m, b)
}
func (m *ListNamespaceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNamespaceResponse.Marshal(b, m, deterministic)
}
func (m *ListNamespaceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNamespaceResponse.Merge(m, src)
}
func (m *ListNamespaceResponse) XXX_Size() int {
	return xxx_messageInfo_ListNamespaceResponse.Size(m)
}
func (m *ListNamespaceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNamespaceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListNamespaceResponse proto.InternalMessageInfo

func (m *ListNamespaceResponse) GetNamespaces() []*Namespace {
	if m != nil {
		return m.Namespaces
	}
	return nil
}

func init() {
	proto.RegisterType((*RegisterNamespaceRequest)(nil), "postfinance.discovery.v1.RegisterNamespaceRequest")
	proto.RegisterType((*RegisterNamespaceResponse)(nil), "postfinance.discovery.v1.RegisterNamespaceResponse")
	proto.RegisterType((*UnregisterNamespaceRequest)(nil), "postfinance.discovery.v1.UnregisterNamespaceRequest")
	proto.RegisterType((*UnregisterNamespaceResponse)(nil), "postfinance.discovery.v1.UnregisterNamespaceResponse")
	proto.RegisterType((*ListNamespaceRequest)(nil), "postfinance.discovery.v1.ListNamespaceRequest")
	proto.RegisterType((*ListNamespaceResponse)(nil), "postfinance.discovery.v1.ListNamespaceResponse")
}

func init() { proto.RegisterFile("namespace_api.proto", fileDescriptor_6b31ce92b46e1ec9) }

var fileDescriptor_6b31ce92b46e1ec9 = []byte{
	// 387 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xce, 0x4b, 0xcc, 0x4d,
	0x2d, 0x2e, 0x48, 0x4c, 0x4e, 0x8d, 0x4f, 0x2c, 0xc8, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x92, 0x28, 0xc8, 0x2f, 0x2e, 0x49, 0xcb, 0xcc, 0x4b, 0xcc, 0x4b, 0x4e, 0xd5, 0x4b, 0xc9, 0x2c,
	0x4e, 0xce, 0x2f, 0x4b, 0x2d, 0xaa, 0xd4, 0x2b, 0x33, 0x94, 0xe2, 0x87, 0x2b, 0x87, 0x28, 0x95,
	0x92, 0x49, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x4f, 0x2c, 0xc8, 0xd4, 0x4f, 0xcc, 0xcb, 0xcb,
	0x2f, 0x49, 0x2c, 0xc9, 0xcc, 0xcf, 0x2b, 0x86, 0xc8, 0x2a, 0xb9, 0x71, 0x49, 0x04, 0xa5, 0xa6,
	0x67, 0x16, 0x97, 0xa4, 0x16, 0xf9, 0xc1, 0x34, 0x06, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08,
	0x09, 0x71, 0xb1, 0x80, 0x0c, 0x93, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x85, 0xc4,
	0xb8, 0xd8, 0x52, 0x2b, 0x0a, 0xf2, 0x8b, 0x4a, 0x24, 0x98, 0x14, 0x18, 0x35, 0x58, 0x83, 0xa0,
	0x3c, 0xa5, 0x38, 0x2e, 0x49, 0x2c, 0xe6, 0x14, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x0a, 0x39, 0x72,
	0x71, 0xc2, 0x5d, 0x05, 0x36, 0x8d, 0xdb, 0x48, 0x59, 0x0f, 0x97, 0x0f, 0xf4, 0x10, 0xfa, 0x11,
	0xba, 0x94, 0x0c, 0xb8, 0xa4, 0x42, 0xf3, 0x8a, 0x48, 0x70, 0xa9, 0x92, 0x2c, 0x97, 0x34, 0x56,
	0x1d, 0x10, 0x37, 0x29, 0x89, 0x71, 0x89, 0xf8, 0x64, 0x16, 0x97, 0xa0, 0x1b, 0xa5, 0x14, 0xc3,
	0x25, 0x8a, 0x26, 0x0e, 0xf5, 0x84, 0x33, 0x17, 0x17, 0xdc, 0x39, 0xc5, 0x12, 0x8c, 0x0a, 0xcc,
	0xc4, 0xfa, 0x02, 0x49, 0x9b, 0xd1, 0x75, 0x66, 0x2e, 0x1e, 0xb8, 0x8c, 0x63, 0x80, 0xa7, 0xd0,
	0x74, 0x46, 0x2e, 0x41, 0x8c, 0x80, 0x13, 0x32, 0xc2, 0x6d, 0x2e, 0xae, 0xd8, 0x92, 0x32, 0x26,
	0x49, 0x0f, 0x34, 0x14, 0x24, 0x9b, 0x2e, 0x3f, 0x99, 0xcc, 0x24, 0xac, 0xc4, 0xa7, 0x5f, 0x66,
	0xa8, 0x8f, 0x70, 0xa7, 0x15, 0xa3, 0x96, 0xd0, 0x42, 0x46, 0x2e, 0x61, 0x2c, 0x01, 0x28, 0x64,
	0x82, 0xdb, 0x1e, 0xdc, 0x31, 0x24, 0x65, 0x4a, 0xa2, 0x2e, 0xa8, 0xfb, 0x64, 0xc1, 0xee, 0x13,
	0xd7, 0x12, 0x45, 0x75, 0x9f, 0x7e, 0x35, 0x88, 0x5d, 0x2b, 0xd4, 0xc1, 0xc8, 0xc5, 0x8b, 0x12,
	0x5b, 0x42, 0x7a, 0xb8, 0xed, 0xc1, 0x16, 0xdd, 0x52, 0xfa, 0x44, 0xab, 0x87, 0xa5, 0x1b, 0xb0,
	0x8b, 0x04, 0x84, 0xd0, 0x42, 0xcc, 0xc9, 0x9e, 0x4b, 0x3a, 0x39, 0x03, 0xa7, 0x61, 0x4e, 0x82,
	0x88, 0x58, 0x2f, 0xc8, 0x0c, 0x00, 0x65, 0xbd, 0x00, 0xc6, 0x28, 0x6e, 0xb8, 0x92, 0x32, 0xc3,
	0x24, 0x36, 0x70, 0x86, 0x34, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xc7, 0x6d, 0xa5, 0x09, 0xf0,
	0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NamespaceAPIClient is the client API for NamespaceAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NamespaceAPIClient interface {
	// RegisterNamespace registers a namespace.
	RegisterNamespace(ctx context.Context, in *RegisterNamespaceRequest, opts ...grpc.CallOption) (*RegisterNamespaceResponse, error)
	// UnRegisterNamespace unregisters a namespace.
	UnregisterNamespace(ctx context.Context, in *UnregisterNamespaceRequest, opts ...grpc.CallOption) (*UnregisterNamespaceResponse, error)
	// ListNamespace lists all namespaces.
	ListNamespace(ctx context.Context, in *ListNamespaceRequest, opts ...grpc.CallOption) (*ListNamespaceResponse, error)
}

type namespaceAPIClient struct {
	cc *grpc.ClientConn
}

func NewNamespaceAPIClient(cc *grpc.ClientConn) NamespaceAPIClient {
	return &namespaceAPIClient{cc}
}

func (c *namespaceAPIClient) RegisterNamespace(ctx context.Context, in *RegisterNamespaceRequest, opts ...grpc.CallOption) (*RegisterNamespaceResponse, error) {
	out := new(RegisterNamespaceResponse)
	err := c.cc.Invoke(ctx, "/postfinance.discovery.v1.NamespaceAPI/RegisterNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *namespaceAPIClient) UnregisterNamespace(ctx context.Context, in *UnregisterNamespaceRequest, opts ...grpc.CallOption) (*UnregisterNamespaceResponse, error) {
	out := new(UnregisterNamespaceResponse)
	err := c.cc.Invoke(ctx, "/postfinance.discovery.v1.NamespaceAPI/UnregisterNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *namespaceAPIClient) ListNamespace(ctx context.Context, in *ListNamespaceRequest, opts ...grpc.CallOption) (*ListNamespaceResponse, error) {
	out := new(ListNamespaceResponse)
	err := c.cc.Invoke(ctx, "/postfinance.discovery.v1.NamespaceAPI/ListNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NamespaceAPIServer is the server API for NamespaceAPI service.
type NamespaceAPIServer interface {
	// RegisterNamespace registers a namespace.
	RegisterNamespace(context.Context, *RegisterNamespaceRequest) (*RegisterNamespaceResponse, error)
	// UnRegisterNamespace unregisters a namespace.
	UnregisterNamespace(context.Context, *UnregisterNamespaceRequest) (*UnregisterNamespaceResponse, error)
	// ListNamespace lists all namespaces.
	ListNamespace(context.Context, *ListNamespaceRequest) (*ListNamespaceResponse, error)
}

// UnimplementedNamespaceAPIServer can be embedded to have forward compatible implementations.
type UnimplementedNamespaceAPIServer struct {
}

func (*UnimplementedNamespaceAPIServer) RegisterNamespace(ctx context.Context, req *RegisterNamespaceRequest) (*RegisterNamespaceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterNamespace not implemented")
}
func (*UnimplementedNamespaceAPIServer) UnregisterNamespace(ctx context.Context, req *UnregisterNamespaceRequest) (*UnregisterNamespaceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnregisterNamespace not implemented")
}
func (*UnimplementedNamespaceAPIServer) ListNamespace(ctx context.Context, req *ListNamespaceRequest) (*ListNamespaceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNamespace not implemented")
}

func RegisterNamespaceAPIServer(s *grpc.Server, srv NamespaceAPIServer) {
	s.RegisterService(&_NamespaceAPI_serviceDesc, srv)
}

func _NamespaceAPI_RegisterNamespace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterNamespaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NamespaceAPIServer).RegisterNamespace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/postfinance.discovery.v1.NamespaceAPI/RegisterNamespace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NamespaceAPIServer).RegisterNamespace(ctx, req.(*RegisterNamespaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NamespaceAPI_UnregisterNamespace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnregisterNamespaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NamespaceAPIServer).UnregisterNamespace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/postfinance.discovery.v1.NamespaceAPI/UnregisterNamespace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NamespaceAPIServer).UnregisterNamespace(ctx, req.(*UnregisterNamespaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NamespaceAPI_ListNamespace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNamespaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NamespaceAPIServer).ListNamespace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/postfinance.discovery.v1.NamespaceAPI/ListNamespace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NamespaceAPIServer).ListNamespace(ctx, req.(*ListNamespaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NamespaceAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "postfinance.discovery.v1.NamespaceAPI",
	HandlerType: (*NamespaceAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterNamespace",
			Handler:    _NamespaceAPI_RegisterNamespace_Handler,
		},
		{
			MethodName: "UnregisterNamespace",
			Handler:    _NamespaceAPI_UnregisterNamespace_Handler,
		},
		{
			MethodName: "ListNamespace",
			Handler:    _NamespaceAPI_ListNamespace_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "namespace_api.proto",
}
