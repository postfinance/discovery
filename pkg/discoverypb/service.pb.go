// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package discoveryv1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Service represents a service.
type Service struct {
	// id is the generated ID of the registered service.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// name is the name of the service. This name is used to group the registered services.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// endpoint is the URL under which the service can be reached.
	Endpoint string `protobuf:"bytes,3,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	// namespace is the namespace where the service is registered. A service can only exist once per namespace.
	Namespace string `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// selector is an optional k8s style selector to choose a group of servers a service is distributed to.
	Selector string `protobuf:"bytes,5,opt,name=selector,proto3" json:"selector,omitempty"`
	// servers is the list of servers responsible for scraping that service.
	Servers []string `protobuf:"bytes,6,rep,name=servers,proto3" json:"servers,omitempty"`
	// labels are key/value pairs that can attached to a service.
	Labels map[string]string `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// describtion can be used to descrive the service.
	Description string `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	// modified is the the time when the service is created or modified.
	Modified             *timestamp.Timestamp `protobuf:"bytes,9,opt,name=modified,proto3" json:"modified,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Service) Reset()         { *m = Service{} }
func (m *Service) String() string { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()    {}
func (*Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *Service) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Service.Unmarshal(m, b)
}
func (m *Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Service.Marshal(b, m, deterministic)
}
func (m *Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Service.Merge(m, src)
}
func (m *Service) XXX_Size() int {
	return xxx_messageInfo_Service.Size(m)
}
func (m *Service) XXX_DiscardUnknown() {
	xxx_messageInfo_Service.DiscardUnknown(m)
}

var xxx_messageInfo_Service proto.InternalMessageInfo

func (m *Service) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Service) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Service) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *Service) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *Service) GetSelector() string {
	if m != nil {
		return m.Selector
	}
	return ""
}

func (m *Service) GetServers() []string {
	if m != nil {
		return m.Servers
	}
	return nil
}

func (m *Service) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Service) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Service) GetModified() *timestamp.Timestamp {
	if m != nil {
		return m.Modified
	}
	return nil
}

func init() {
	proto.RegisterType((*Service)(nil), "postfinance.discovery.v1.Service")
	proto.RegisterMapType((map[string]string)(nil), "postfinance.discovery.v1.Service.LabelsEntry")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 326 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x50, 0x4d, 0x6b, 0xe3, 0x30,
	0x14, 0xc4, 0x76, 0xbe, 0xfc, 0xbc, 0xbb, 0x2c, 0x62, 0x0f, 0xc2, 0x5b, 0xa8, 0xe9, 0xc9, 0x97,
	0x2a, 0x24, 0x85, 0xd2, 0xe6, 0x18, 0xc8, 0xad, 0x87, 0xe0, 0xf6, 0xd4, 0x9b, 0x63, 0xbd, 0xa4,
	0xa2, 0xb6, 0x64, 0x24, 0xc5, 0x90, 0x9f, 0xde, 0x5b, 0xb1, 0x6c, 0xa7, 0xb9, 0xe4, 0xf6, 0x66,
	0xde, 0x8c, 0x9e, 0x66, 0xe0, 0xb7, 0x41, 0xdd, 0x88, 0x02, 0x59, 0xad, 0x95, 0x55, 0x84, 0xd6,
	0xca, 0xd8, 0xbd, 0x90, 0xb9, 0x2c, 0x90, 0x71, 0x61, 0x0a, 0xd5, 0xa0, 0x3e, 0xb1, 0x66, 0x11,
	0xdf, 0x1e, 0x94, 0x3a, 0x94, 0x38, 0x77, 0xba, 0xdd, 0x71, 0x3f, 0xb7, 0xa2, 0x42, 0x63, 0xf3,
	0xaa, 0xee, 0xac, 0x77, 0x5f, 0x3e, 0x4c, 0x5f, 0xbb, 0xc7, 0xc8, 0x1f, 0xf0, 0x05, 0xa7, 0x5e,
	0xe2, 0xa5, 0x61, 0xe6, 0x0b, 0x4e, 0x08, 0x8c, 0x64, 0x5e, 0x21, 0xf5, 0x1d, 0xe3, 0x66, 0x12,
	0xc3, 0x0c, 0x25, 0xaf, 0x95, 0x90, 0x96, 0x06, 0x8e, 0x3f, 0x63, 0x72, 0x03, 0x61, 0xab, 0x31,
	0x75, 0x5e, 0x20, 0x1d, 0xb9, 0xe5, 0x0f, 0xd1, 0x3a, 0x0d, 0x96, 0x58, 0x58, 0xa5, 0xe9, 0xb8,
	0x73, 0x0e, 0x98, 0x50, 0x98, 0xb6, 0x89, 0x50, 0x1b, 0x3a, 0x49, 0x82, 0x34, 0xcc, 0x06, 0x48,
	0x36, 0x30, 0x29, 0xf3, 0x1d, 0x96, 0x86, 0x4e, 0x93, 0x20, 0x8d, 0x96, 0xf7, 0xec, 0x5a, 0x56,
	0xd6, 0xc7, 0x60, 0x2f, 0x4e, 0xbf, 0x91, 0x56, 0x9f, 0xb2, 0xde, 0x4c, 0x12, 0x88, 0x38, 0x9a,
	0x42, 0x8b, 0xda, 0x0a, 0x25, 0xe9, 0xcc, 0xdd, 0xbf, 0xa4, 0xc8, 0x23, 0xcc, 0x2a, 0xc5, 0xc5,
	0x5e, 0x20, 0xa7, 0x61, 0xe2, 0xa5, 0xd1, 0x32, 0x66, 0x5d, 0x79, 0x6c, 0x28, 0x8f, 0xbd, 0x0d,
	0xe5, 0x65, 0x67, 0x6d, 0xfc, 0x0c, 0xd1, 0xc5, 0x41, 0xf2, 0x17, 0x82, 0x4f, 0x3c, 0xf5, 0x25,
	0xb6, 0x23, 0xf9, 0x07, 0xe3, 0x26, 0x2f, 0x8f, 0x43, 0x8d, 0x1d, 0x58, 0xf9, 0x4f, 0xde, 0x7a,
	0x05, 0xff, 0x8b, 0x8f, 0xab, 0x79, 0xd6, 0xbf, 0xfa, 0x40, 0xdb, 0xf6, 0xfc, 0xd6, 0x7b, 0x8f,
	0xce, 0xdb, 0x66, 0xb1, 0x9b, 0xb8, 0x4f, 0x3d, 0x7c, 0x07, 0x00, 0x00, 0xff, 0xff, 0x3d, 0xcc,
	0x29, 0x71, 0x0a, 0x02, 0x00, 0x00,
}
